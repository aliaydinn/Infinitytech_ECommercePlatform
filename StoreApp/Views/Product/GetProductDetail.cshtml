@using StoreApp.Entity.DTOs.ProductsDto;
@model ProductDto

<head>
    <link rel="stylesheet" href="~/css/GetProductDetail.css">
</head>

<br />
<br />
<br />
<br />

<section class="highlighted-section">
    <div class="container">
        <div class="row">
            
            <div class="col-lg-6 col-md-6">
                <div class="product__details__pic">
                    <div class="product__details__pic__item">
                        <img class="product__details__pic__item--large" src="@Model.ImageUrl" alt="Product Image">
                    </div>
                </div>
            </div>

           
            <div class="col-lg-6 col-md-6">
                <div class="product__details__text">
                    <h3>@Model.Name</h3>

                    <div class="product__details__price">
                        @Model.Price.ToString("N2") TL
                    </div>


                    <ul class="product-details-list">
                        @foreach (var item in Model.BriefInformation.Split(new[] { '.' }, StringSplitOptions.RemoveEmptyEntries))
                        {
                            var trimmedItem = item.Trim();
                            var splitIndex = trimmedItem.IndexOf(':');
                            var beforeColon = splitIndex >= 0 ? trimmedItem.Substring(0, splitIndex + 1) : trimmedItem;
                            var afterColon = splitIndex >= 0 ? trimmedItem.Substring(splitIndex + 1) : string.Empty;

                            <li>
                                @if (!string.IsNullOrEmpty(beforeColon))
                                {
                                    @beforeColon
                                }
                                @afterColon
                                @if (!string.IsNullOrEmpty(trimmedItem) && !trimmedItem.EndsWith("."))
                                {
                                    @:.
                                }
                            </li>
                        }
                    </ul>


                    <br />
                    <br />

                    <div class="product__details__container" style="display: flex; align-items: center;">
                        <div class="button-group">
                            <form method="post" id="@Model.Id" asp-page="/cart">
                                <input type="hidden" asp-for="Id">
                                <input type="hidden" name="returnUrl" value="/Product/Index/@Model.Id">
                                <button type="submit" class="btn btn-outline-success" style="height: 50px; padding: 10px 20px; font-size: 16px; border: 0.5px solid #000000; margin-top: 80px;">
                                    <i class="fa-solid fa-basket-shopping"></i>
                                    Sepete Ekle
                                </button>

                                <button type="submit" class="btn btn-outline-info" style="height: 50px; padding: 10px 20px; font-size: 16px; border: 0.5px solid #000000; margin-top: 80px;">
                                    <i class="fa-solid fa-star"></i>
                                   Fovorilere Ekle
                                </button>
                            </form>
                        </div>
                    </div>

                </div>
            </div>

        </div>
        <br />
        <br />
        <div class="col-lg-12">
            <div class="product__details__tab">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="tab" href="#tabs-2" role="tab" aria-selected="false" style="font-weight:bold; color:black; font-size: 1.25em;">
                            Açıklama
                        </a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane active" id="tabs-1" role="tabpanel">
                        <div class="product__details__tab__desc">

                            <ul class="product-details-list">
                                @foreach (var item in Model.BriefInformation.Split(new[] { '.' }, StringSplitOptions.RemoveEmptyEntries))
                                {
                                    var trimmedItem = item.Trim();
                                    var splitIndex = trimmedItem.IndexOf(':');
                                    var beforeColon = splitIndex >= 0 ? trimmedItem.Substring(0, splitIndex + 1) : trimmedItem;
                                    var afterColon = splitIndex >= 0 ? trimmedItem.Substring(splitIndex + 1) : string.Empty;

                                    <li>
                                        @if (!string.IsNullOrEmpty(beforeColon))
                                        {
                                            @beforeColon
                                        }
                                        @afterColon
                                        @if (!string.IsNullOrEmpty(trimmedItem) && !trimmedItem.EndsWith("."))
                                        {
                                            @:.
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<br />
<br />


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const quantityInput = document.getElementById('quantityInput');
        const decreaseButton = document.querySelector('.dec');
        const increaseButton = document.querySelector('.inc');

        if (quantityInput.value === '') {
            quantityInput.value = '1';
        }

        increaseButton.addEventListener('click', function () {
            let currentValue = parseInt(quantityInput.value, 10);
            quantityInput.value = currentValue + 1;
        });

        decreaseButton.addEventListener('click', function () {
            let currentValue = parseInt(quantityInput.value, 10);
            if (currentValue > 1) {
                quantityInput.value = currentValue - 1;
            }
        });
    });
</script>
